@{
    ViewData["Title"] = "Survey Data";
}
<style>
    .csvcolumn-list {
        -webkit-column-count: 3;
        -moz-column-count: 3;
        column-count: 3;
    }
    .csvcolumn-list li {
        flex: 1 0 25%;
    }
</style>
<div class="widget">
    <fieldset>
        <legend>Filters</legend>
        <ul class="list-group list-group-sortable csvcolumn-list"></ul>
    </fieldset>
    <fieldset>
        <legend>Hotel Ratings: </legend>
        <ul class="list-group list-group-sortable csvcolumn-list"></ul>
    </fieldset>
</div><div style="border:solid 5px black;" id="generate">Generate</div>
<body>

    <div id="vis"></div>
</body>

<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="~/js/d3.min.js"></script>
<script src="https://d3js.org/d3-array.v2.min.js"></script>
<script src="~/js/d3.parsets.js"></script>
<script src="~/js/highlight.js"></script>
<script src="~/js/jquery.sortable.js"></script>
<link href="~/css/d3.parsets.css" rel="stylesheet" />

<script>
    var datacolumns;
    var i;
    d3.csv('https://localhost:44318/All_data_with_dates_and_filtered.csv', function (error, data) {
        datacolumns = d3.keys(data[0]);
        datacolumnssize = datacolumns.length;

        for (i = 2; i < datacolumnssize; i++) {

            $(".csvcolumn-list").append('<li class="list-group-item" draggable="true"> <label for= "Source">' + datacolumns[i] + '</label ><input type="checkbox" name="qselector" id="check-' + datacolumns[i] + '" value="' + datacolumns[i] + '"></li>');
        }

        $('.list-group-sortable').sortable({
            placeholderClass: 'list-group-item'
        });

        console.log(d3.rollup(data, v => v.length, d => d.Submitted));
    });
</script>

<script>
    d3.rebind = function (target, source) {
        var i = 1, n = arguments.length, method;
        while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);
        return target;
    };

    // Method is assumed to be a standard D3 getter-setter:
    // If passed with no arguments, gets the value.
    // If passed with arguments, sets the value and returns the target.
    function d3_rebind(target, source, method) {
        return function () {
            var value = method.apply(source, arguments);
            return value === source ? target : value;
        };
    }

    d3.functor = function functor(v) {
        return typeof v === "function" ? v : function () {
            return v;
        };
    };
</script>
<script>
    var qselectorarray;

    function qselector() {
        qselectorarray = [];
        console.log("qselectorarray reset");
        $("input:checkbox[name=qselector]:checked").each(function () {
            qselectorarray.push($(this).val());
            console.log("qselectorarray array added")
        });
        generatechart();
    }

    function generatechart() {
        $("#vis").empty()

        var margin = { top: 0, right: 120, bottom: 50, left: 0 },
            width = 900 - margin.left - margin.right,
            height = 600 - margin.top - margin.bottom;

        if (qselectorarray === undefined || qselectorarray.length == 0) {
            qselectorarray = ["Source", "Device"]
        }

        var chart = d3.parsets()
            .width(height)
            .height(width)
            .dimensions(qselectorarray)
            .tension(.5);

        var svg = d3.select("#vis").append("svg")
            .attr("width", width + margin.left + margin.right)
            .attr("height", height + margin.top + margin.bottom)
            .append("g")
            .attr("transform", "translate(0," + height + ")rotate(-90)");

        d3.csv("https://localhost:44318/All_data_with_dates_and_filtered.csv", function (error, csv) {
            svg.datum(csv).call(chart);
            svg.selectAll(".category text")
                .attr("dx", 5)
                .attr("transform", "rotate(90)");
            svg.selectAll(".category rect")
                .attr("y", 0);
            svg.selectAll("text.dimension")
                .attr("dy", "1.5em")
                .attr("transform", "rotate(90)");
            svg.selectAll("text.dimension .sort.alpha")
                .attr("x", 0)
                .attr("dx", 0)
                .attr("dy", "1.5em");
            svg.selectAll("text.dimension .sort.size")
                .attr("dx", "1em");
        });
    };

    $("input[name=qselector]").change(qselector);
    $("#generate").click(qselector);
    $('.list-group-sortable').sortable({
        placeholderClass: 'list-group-item'
    });
    $('.list-group-sortable').sortable().on("sortupdate", function (e, ui) {
        qselector();
    });


</script>

<style>
</style>

<div class="parsets tooltip"></div>